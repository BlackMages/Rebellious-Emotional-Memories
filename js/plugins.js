// Generated by RPG Maker.
// Do not edit this file directly.
var $plugins =
[
{"name":"FOSSIL","status":false,"description":"Fossil is an interoperability layer for RMMZ, designed to make MV plugins work in MZ. \r\nSo far, we support over 300 plugins.  You can help!","parameters":{}},
{"name":"FMOD_MV","status":false,"description":"This plugin integrated with FMOD by Firelight Technologies Pty Ltd.\nVersion : alpha-1.0.8","parameters":{"total-memory":"67108864","bank-path":"audio/bank","bank-assets":"[\"Master\",\"Master.strings\"]","guids-path":"audio/bank/fmod_studio_guids.js","integrated-vcas":"","integrated-vcas-bgm":"","integrated-vcas-bgs":"","integrated-vcas-me":"","integrated-vcas-se":"","listener-is-player":"false","save-event-timeline-position":"true","system-bgm":"","system-bgm-title":"","system-bgm-battle":"","system-bgm-airship":"","system-bgm-boat":"","system-bgm-ship":"","system-me":"","system-me-victory":"","system-me-defeat":"","system-me-game-over":"","system-se":"","system-se-cursor":"","system-se-ok":"","system-se-cancel":"","system-se-buzzer":"","system-se-equip":"","system-se-save":"","system-se-load":"","system-se-battle-start":"","system-se-escape":"","system-se-enemy-attack":"","system-se-enemy-damage":"","system-se-enemy-collapse":"","system-se-boss-collapse1":"","system-se-boss-collapse2":"","system-se-actor-damage":"","system-se-actor-collapse":"","system-se-recovery":"","system-se-miss":"","system-se-evasion":"","system-se-magic-evasion":"","system-se-reflection":"","system-se-shop":"","system-se-use-item":"","system-se-use-skill":""}},
{"name":"--------------------------","status":false,"description":"---------------------------------------------------------------------","parameters":{}},
{"name":"VisuMZ_1_MessageCore","status":true,"description":"[RPG Maker MZ] [Tier 1] [Version 1.47] [MessageCore]","parameters":{"BreakHead":"----------------------------------","MessageCore":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","General:struct":"{\"MessageWindow\":\"\",\"MessageRows:num\":\"4\",\"MessageWidth:num\":\"816\",\"FastForwardKey:str\":\"pagedown\",\"MessageTextDelay:num\":\"1\",\"StretchDimmedBg:eval\":\"true\",\"DefaultOutlineWidth:num\":\"3\",\"NameBoxWindow\":\"\",\"NameBoxWindowDefaultColor:num\":\"0\",\"NameBoxWindowOffsetX:num\":\"0\",\"NameBoxWindowOffsetY:num\":\"0\",\"ChoiceListWindow\":\"\",\"ChoiceWindowLineHeight:num\":\"36\",\"ChoiceWindowMaxRows:num\":\"8\",\"ChoiceWindowMaxCols:num\":\"1\",\"ChoiceWindowTextAlign:str\":\"default\",\"DefaultTextCodes\":\"\",\"RelativePXPY:eval\":\"true\",\"FontBiggerCap:eval\":\"108\",\"FontSmallerCap:eval\":\"12\",\"FontChangeValue:eval\":\"12\"}","AutoColor:struct":"{\"DatabaseHighlighting\":\"\",\"Actors:str\":\"0\",\"Classes:str\":\"0\",\"Skills:str\":\"0\",\"Items:str\":\"0\",\"Weapons:str\":\"0\",\"Armors:str\":\"0\",\"Enemies:str\":\"0\",\"States:str\":\"0\",\"WordHighlighting\":\"\",\"TextColor1:arraystr\":\"[]\",\"TextColor2:arraystr\":\"[]\",\"TextColor3:arraystr\":\"[]\",\"TextColor4:arraystr\":\"[]\",\"TextColor5:arraystr\":\"[]\",\"TextColor6:arraystr\":\"[]\",\"TextColor7:arraystr\":\"[]\",\"TextColor8:arraystr\":\"[]\",\"TextColor9:arraystr\":\"[]\",\"TextColor10:arraystr\":\"[]\",\"TextColor11:arraystr\":\"[]\",\"TextColor12:arraystr\":\"[]\",\"TextColor13:arraystr\":\"[]\",\"TextColor14:arraystr\":\"[]\",\"TextColor15:arraystr\":\"[]\",\"TextColor16:arraystr\":\"[]\",\"TextColor17:arraystr\":\"[]\",\"TextColor18:arraystr\":\"[]\",\"TextColor19:arraystr\":\"[]\",\"TextColor20:arraystr\":\"[]\",\"TextColor21:arraystr\":\"[]\",\"TextColor22:arraystr\":\"[]\",\"TextColor23:arraystr\":\"[]\",\"TextColor24:arraystr\":\"[]\",\"TextColor25:arraystr\":\"[]\",\"TextColor26:arraystr\":\"[]\",\"TextColor27:arraystr\":\"[]\",\"TextColor28:arraystr\":\"[]\",\"TextColor29:arraystr\":\"[]\",\"TextColor30:arraystr\":\"[]\",\"TextColor31:arraystr\":\"[]\"}","CustomFonts:arraystruct":"[]","TextCodeActions:arraystruct":"[\"{\\\"Match:str\\\":\\\"ChangeFace\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst data = this.obtainEscapeString(textState).split(',');\\\\\\\\nif (textState.drawing) {\\\\\\\\n    const filename = data[0].trim();\\\\\\\\n    const index = parseInt(data[1] || '0');\\\\\\\\n    $gameMessage.setFaceImage(filename, index);\\\\\\\\n    this.loadMessageFace();\\\\\\\\n    const rtl = $gameMessage.isRTL();\\\\\\\\n    const width = ImageManager.faceWidth;\\\\\\\\n    const height = this.innerHeight;\\\\\\\\n    const x = rtl ? this.innerWidth - width - 4 : 4;\\\\\\\\n    this.contents.clearRect(x, 0, width, height);\\\\\\\\n    this._faceBitmap.addLoadListener(this.drawMessageFace.bind(this));\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"FaceIndex\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst index = this.obtainEscapeParam(textState);\\\\\\\\nif (textState.drawing) {\\\\\\\\n    const filename = $gameMessage.faceName();\\\\\\\\n    $gameMessage.setFaceImage(filename, index);\\\\\\\\n    this.loadMessageFace();\\\\\\\\n    const rtl = $gameMessage.isRTL();\\\\\\\\n    const width = ImageManager.faceWidth;\\\\\\\\n    const height = this.innerHeight;\\\\\\\\n    const x = rtl ? this.innerWidth - width - 4 : 4;\\\\\\\\n    this.contents.clearRect(x, 0, width, height);\\\\\\\\n    this._faceBitmap.addLoadListener(this.drawMessageFace.bind(this));\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TextDelay\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst delay = this.obtainEscapeParam(textState);\\\\\\\\nif (textState.drawing && this.constructor === Window_Message) {\\\\\\\\n    this.setTextDelay(delay);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"NormalBG\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nif (textState.drawing) {\\\\\\\\n    this.setBackgroundType(0);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"DimBG\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nif (textState.drawing) {\\\\\\\\n    this.setBackgroundType(1);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TransparentBG\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nif (textState.drawing) {\\\\\\\\n    this.setBackgroundType(2);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"FontChange\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst fontName = this.obtainEscapeString(textState);\\\\\\\\nthis.contents.fontFace = fontName;\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ResetFont\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"this.resetFontSettings();\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ResetColor\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"this.resetTextColor();\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"HexColor\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst hexColor = this.obtainEscapeString(textState);\\\\\\\\nif (!this.isColorLocked() && textState.drawing) {\\\\\\\\n    this.changeTextColor(hexColor);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"OutlineColor\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst colorIndex = this.obtainEscapeParam(textState);\\\\\\\\nif (!this.isColorLocked() && textState.drawing) {\\\\\\\\n    this.changeOutlineColor(ColorManager.textColor(colorIndex));\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"OutlineHexColor\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst hexColor = this.obtainEscapeString(textState);\\\\\\\\nif (!this.isColorLocked() && textState.drawing) {\\\\\\\\n    this.changeOutlineColor(hexColor);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"OutlineWidth\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst width = this.obtainEscapeParam(textState);\\\\\\\\nif (textState.drawing) {\\\\\\\\n    this.contents.outlineWidth = width;\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WindowMoveTo\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst data = this.obtainEscapeString(textState).split(',');\\\\\\\\nif (textState.drawing) {\\\\\\\\n    const x = !!data[0] ? Number(data[0].trim()) : this.x;\\\\\\\\n    const y = !!data[1] ? Number(data[1].trim()) : this.y;\\\\\\\\n    const width = !!data[2] ? Number(data[2].trim()) : this.width;\\\\\\\\n    const height = !!data[3] ? Number(data[3].trim()) : this.height;\\\\\\\\n    const duration = !!data[4] ? Number(data[4].trim()) : 20;\\\\\\\\n    const easingType = !!data[5] ? data[5].trim() : 0;\\\\\\\\n    this.moveTo(x, y, width, height, duration, easingType);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WindowMoveBy\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst data = this.obtainEscapeString(textState).split(',');\\\\\\\\nif (textState.drawing) {\\\\\\\\n    const x = !!data[0] ? Number(data[0].trim()) : 0;\\\\\\\\n    const y = !!data[1] ? Number(data[1].trim()) : 0;\\\\\\\\n    const width = !!data[2] ? Number(data[2].trim()) : 0;\\\\\\\\n    const height = !!data[3] ? Number(data[3].trim()) : 0;\\\\\\\\n    const duration = !!data[4] ? Number(data[4].trim()) : 20;\\\\\\\\n    const easingType = !!data[5] ? data[5].trim() : 0;\\\\\\\\n    this.moveBy(x, y, width, height, duration, easingType);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WindowReset\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nif (textState.drawing) {\\\\\\\\n    const frames = 20;\\\\\\\\n    const easingType = 0;\\\\\\\\n    this.resetRect(frames, easingType);\\\\\\\\n}\\\\\\\"\\\"}\"]","TextCodeReplace:arraystruct":"[\"{\\\"Match:str\\\":\\\"ActorFace\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const actorId = parseInt(arguments[1]);\\\\\\\\nconst actor = $gameActors.actor(actorId);\\\\\\\\nif (this.constructor === Window_Message && actor) {\\\\\\\\n    $gameMessage.setFaceImage(\\\\\\\\n        actor.faceName(),\\\\\\\\n        actor.faceIndex()\\\\\\\\n    );\\\\\\\\n}\\\\\\\\nreturn '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"PartyFace\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const index = parseInt(arguments[1]) - 1;\\\\\\\\nconst actor = $gameParty.members()[index];\\\\\\\\nif (this.constructor === Window_Message && actor) {\\\\\\\\n    $gameMessage.setFaceImage(\\\\\\\\n        actor.faceName(),\\\\\\\\n        actor.faceIndex()\\\\\\\\n    );\\\\\\\\n}\\\\\\\\nreturn '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Class\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataClasses;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ClassIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataClasses;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ClassName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataClasses;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Skill\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataSkills;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"SkillIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataSkills;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"SkillName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataSkills;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Item\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataItems;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ItemIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataItems;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ItemName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataItems;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ItemQuantity\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataItems;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nreturn $gameParty.numItems(database[id]);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Weapon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataWeapons;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WeaponIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataWeapons;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WeaponName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataWeapons;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WeaponQuantity\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataWeapons;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nreturn $gameParty.numItems(database[id]);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Armor\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataArmors;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ArmorIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataArmors;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ArmorName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataArmors;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ArmorQuantity\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataArmors;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nreturn $gameParty.numItems(database[id]);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"State\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataStates;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"StateIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataStates;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"StateName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataStates;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"LastGainObj\\\",\\\"Type:str\\\":\\\"\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const icon = true;\\\\\\\\nreturn this.lastGainedObjectName(icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"LastGainObjIcon\\\",\\\"Type:str\\\":\\\"\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return this.lastGainedObjectIcon();\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"LastGainObjName\\\",\\\"Type:str\\\":\\\"\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const icon = false;\\\\\\\\nreturn this.lastGainedObjectName(icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"LastGainObjQuantity\\\",\\\"Type:str\\\":\\\"\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return this.lastGainedObjectQuantity();\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Enemy\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataEnemies;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"EnemyName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataEnemies;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Troop\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataTroops;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TroopName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataTroops;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TroopMember\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"if (!$gameParty.inBattle()) return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst index = (parseInt(arguments[1]) - 1) || 0;\\\\\\\\nconst member = $gameTroop.members()[index];\\\\\\\\nconst database = $dataEnemies;\\\\\\\\nconst id = member ? member.enemyId() : 0;\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TroopMemberName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"if (!$gameParty.inBattle()) return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst index = (parseInt(arguments[1]) - 1) || 0;\\\\\\\\nconst member = $gameTroop.members()[index];\\\\\\\\nconst database = $dataEnemies;\\\\\\\\nconst id = member ? member.enemyId() : 0;\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\"]","TextMacros:arraystruct":"[\"{\\\"Match:str\\\":\\\"Example Macro\\\",\\\"TextStr:str\\\":\\\"This is the text that will be displayed when you type [Example Macro].\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return 'Text';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Leader\\\",\\\"TextStr:str\\\":\\\"\\\\\\\\P[1]\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return 'Text';\\\\\\\"\\\"}\"]","Localization:struct":"{\"Main\":\"\",\"Enable:eval\":\"false\",\"CsvFilename:str\":\"Languages.csv\",\"Options\":\"\",\"AddOption:eval\":\"true\",\"AdjustRect:eval\":\"true\",\"Name:str\":\"Text Language\",\"Localized\":\"\",\"DefaultLocale:str\":\"English\",\"Languages:arraystr\":\"[\\\"Bengali\\\",\\\"Chinese(Simplified)\\\",\\\"Chinese(Traditional)\\\",\\\"Czech\\\",\\\"Danish\\\",\\\"Dutch\\\",\\\"English\\\",\\\"Finnish\\\",\\\"French\\\",\\\"German\\\",\\\"Greek\\\",\\\"Hindi\\\",\\\"Hungarian\\\",\\\"Indonesian\\\",\\\"Italian\\\",\\\"Japanese\\\",\\\"Korean\\\",\\\"Norwegian\\\",\\\"Polish\\\",\\\"Portuguese\\\",\\\"Romanian\\\",\\\"Russian\\\",\\\"Slovak\\\",\\\"Spanish\\\",\\\"Swedish\\\",\\\"Tamil\\\",\\\"Thai\\\",\\\"Turkish\\\"]\",\"LangNames\":\"\",\"Bengali:str\":\"বাংলা\",\"Chinese(Simplified):str\":\"简体中文\",\"Chinese(Traditional):str\":\"繁體中文\",\"Czech:str\":\"Čeština\",\"Danish:str\":\"Dansk\",\"Dutch:str\":\"Nederlands\",\"English:str\":\"English\",\"Finnish:str\":\"Suomi\",\"French:str\":\"Français\",\"German:str\":\"Deutsch\",\"Greek:str\":\"Ελληνικά\",\"Hindi:str\":\"हिन्दी\",\"Hungarian:str\":\"Magyar\",\"Indonesian:str\":\"Bahasa Indo\",\"Italian:str\":\"Italiano\",\"Japanese:str\":\"日本語\",\"Korean:str\":\"한국어\",\"Norwegian:str\":\"Norsk\",\"Polish:str\":\"Polski\",\"Portuguese:str\":\"Português\",\"Romanian:str\":\"Română\",\"Russian:str\":\"Русский\",\"Slovak:str\":\"Slovenčina\",\"Spanish:str\":\"Español\",\"Swedish:str\":\"Svenska\",\"Tamil:str\":\"தமிழ்\",\"Thai:str\":\"ไทย\",\"Turkish:str\":\"Türkçe\"}","TextSpeed:struct":"{\"AddOption:eval\":\"true\",\"AdjustRect:eval\":\"true\",\"Name:str\":\"Text Speed\",\"Default:num\":\"10\",\"Instant:str\":\"Instant\"}","WordWrap:struct":"{\"EnableWordWrap\":\"\",\"MessageWindow:eval\":\"true\",\"HelpWindow:eval\":\"false\",\"Rules\":\"\",\"LineBreakSpace:eval\":\"true\",\"TightWrap:eval\":\"false\",\"EndPadding:num\":\"0\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"--------------------------","status":false,"description":"---------------------------------------------------------------------","parameters":{}},
{"name":"GALV_CharacterFramesMZ","status":true,"description":"Enables map character sheets to have more frames per character.","parameters":{"fSpeedMod":"f * 0.8","fileSymbol":"%"}},
{"name":"GALV_CharacterFramesMZ_BM_Addon","status":true,"description":"","parameters":{}},
{"name":"GALV_CharacterAnimationsMZ","status":false,"description":"(v.1.3) Make the player and follower characters use different\r\ngraphics for idle, walk and run. View HELP for more info.","parameters":{"useJumpGraphic":"false","vehicles":"false","commonEventId":"0","commonEventTime":"0","repeatCommonEvent":"true"}},
{"name":"--------------------------","status":false,"description":"---------------------------------------------------------------------","parameters":{}},
{"name":"DotMoveSystem","status":true,"description":"Dot movement system v2.2.3","parameters":{}},
{"name":"DotMoveSystem_FunctionEx","status":true,"description":"Dot movement system function extension v2.2.1","parameters":{"PlayerInfo":"{\"Width\":\"0.80\",\"Height\":\"0.80\",\"OffsetX\":\"-0.10\",\"OffsetY\":\"-0.10\",\"SlideLengthX\":\"0.5\",\"SlideLengthY\":\"0.5\",\"TransferOffsetX\":\"0.10\",\"TransferOffsetY\":\"0.10\"}","FollowerInfo":"{\"Width\":\"1\",\"Height\":\"1\",\"OffsetX\":\"0\",\"OffsetY\":\"0\",\"SlideLengthX\":\"0.75\",\"SlideLengthY\":\"0.75\",\"TransferOffsetX\":\"0\",\"TransferOffsetY\":\"0\"}","HalfCollisionMassInfo":"{\"UpCollisionRegionId\":\"0\",\"RightCollisionRegionId\":\"0\",\"DownCollisionRegionId\":\"0\",\"LeftCollisionRegionId\":\"0\",\"UpRightCollisionRegionId\":\"0\",\"RightDownCollisionRegionId\":\"0\",\"DownLeftCollisionRegionId\":\"0\",\"LeftUpCollisionRegionId\":\"0\",\"UpRightOpenCollisionRegionId\":\"0\",\"RightDownOpenCollisionRegionId\":\"0\",\"DownLeftOpenCollisionRegionId\":\"0\",\"LeftUpOpenCollisionRegionId\":\"0\",\"UpCollisionTerrainTagId\":\"0\",\"RightCollisionTerrainTagId\":\"0\",\"DownCollisionTerrainTagId\":\"0\",\"LeftCollisionTerrainTagId\":\"0\",\"UpRightCollisionTerrainTagId\":\"0\",\"RightDownCollisionTerrainTagId\":\"0\",\"DownLeftCollisionTerrainTagId\":\"0\",\"LeftUpCollisionTerrainTagId\":\"0\",\"UpRightOpenCollisionTerrainTagId\":\"0\",\"RightDownOpenCollisionTerrainTagId\":\"0\",\"DownLeftOpenCollisionTerrainTagId\":\"0\",\"LeftUpOpenCollisionTerrainTagId\":\"0\"}","TriangleCollisionMassInfo":"{\"LeftUpTriangleRegionId\":\"0\",\"DownLeftTriangleRegionId\":\"0\",\"RightDownTriangleRegionId\":\"0\",\"UpRightTriangleRegionId\":\"0\",\"LeftUpTriangleTerrainTagId\":\"4\",\"DownLeftTriangleTerrainTagId\":\"5\",\"RightDownTriangleTerrainTagId\":\"6\",\"UpRightTriangleTerrainTagId\":\"7\"}"}},
{"name":"CharacterShowShadow","status":true,"description":"character shadow display v1.0.3","parameters":{"ShowShadowCharacterList":"[\"{\\\"CharacterFileName\\\":\\\"Actor1\\\",\\\"CharacterIndex\\\":\\\"-1\\\"}\",\"{\\\"CharacterFileName\\\":\\\"!Other1\\\",\\\"CharacterIndex\\\":\\\"-1\\\"}\",\"{\\\"CharacterFileName\\\":\\\"Monster\\\",\\\"CharacterIndex\\\":\\\"-1\\\"}\"]","ShadowImageFileName":"system/Shadow1","ShadowYOffset":"6"}},
{"name":"build/ARPG_Core","status":true,"description":"ARPG_Core v1.6.1","parameters":{"CopyEventSetting":"{\"CopyEventTag\":\"cp\",\"DynamicEventSrcMapIds\":\"[\\\"1\\\",\\\"10\\\",\\\"15\\\"]\"}","BattlerSetting":"{\"DamageDegCommonVariableId\":\"7\",\"UserKindCommonVariableId\":\"2\",\"UserEventIdCommonVariableId\":\"3\",\"DamageKindCommonVariableId\":\"4\",\"DamageTypeCommonVariableId\":\"5\",\"DamageValueCommonVariableId\":\"6\"}","ActorSetting":"{\"NormalAttackSkillId\":\"1\",\"DamageCommonEventId\":\"1\",\"DeadCommonEventId\":\"10\",\"NormalGuardCommonEventId\":\"4\",\"JustGuardCommonEventId\":\"5\",\"StartGuardCommonEventId\":\"2\",\"EndGuardCommonEventId\":\"3\",\"JustGuardFrame\":\"10\",\"ActorHitBox\":\"{\\\"DamageHitBoxList\\\":\\\"[\\\\\\\"{\\\\\\\\\\\\\\\"X\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"0.15\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Y\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"0.15\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Width\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"0.50\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Height\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"0.50\\\\\\\\\\\\\\\"}\\\\\\\"]\\\"}\",\"GameOverCommonEventId\":\"7\",\"LevelUpCommonEventId\":\"6\"}","EnemySetting":"{\"CollideAttackSkillId\":\"2\",\"DamageCommonEventId\":\"8\",\"DefeatEnemyCommonEventId\":\"9\"}","SkillObjectSetting":"{\"SkillObjectUserKindSelfVariableId\":\"8\",\"SkillObjectUserEventIdSelfVariableId\":\"9\",\"CollisionDetectExSelfSwitchId\":\"5\"}","HitBoxSetting":"{\"VisibleHitAreaSwitchId\":\"4\",\"AttackHitBoxColor\":\"#ff0000aa\",\"DamageHitBoxColor\":\"#0000ffaa\",\"CustomHitBoxDefaultColor\":\"#00ff00aa\",\"CustomHitBoxColorList\":\"[]\"}","ActionComboSetting":"[]","EnemyHpGaugeSetting":"{\"NormalEnemyHpGaugePosition\":\"up\",\"NormalEnemyHpGaugeYOffset\":\"-8\",\"NormalEnemyHpGaugeHeight\":\"6\",\"NormalEnemyHpGaugeColor1\":\"#00aa00\",\"NormalEnemyHpGaugeColor2\":\"#22ff22\",\"BossEnemyHpGaugeLabel\":\"BOSS\",\"BossEnemyHpGaugeYOffset\":\"16\",\"BossEnemyHpGaugeWidth\":\"500\",\"BossEnemyHpGaugeHeight\":\"12\",\"BossEnemyHpGaugeColor1\":\"#00aa00\",\"BossEnemyHpGaugeColor2\":\"#22ff22\"}","KeySetting":"{\"Cancel\":\"{\\\"KeyName\\\":\\\"escape\\\",\\\"KeySymbol\\\":\\\"\\\",\\\"KeyCodes\\\":\\\"[]\\\",\\\"ButtonIndexes\\\":\\\"[]\\\",\\\"KeyCode\\\":\\\"0\\\",\\\"ButtonIndex\\\":\\\"-1\\\"}\",\"Menu\":\"{\\\"KeyName\\\":\\\"menu\\\",\\\"KeySymbol\\\":\\\"\\\",\\\"KeyCodes\\\":\\\"[]\\\",\\\"ButtonIndexes\\\":\\\"[\\\\\\\"3\\\\\\\"]\\\",\\\"KeyCode\\\":\\\"-1\\\",\\\"ButtonIndex\\\":\\\"-1\\\"}\",\"ActorNormalAttack\":\"{\\\"KeyName\\\":\\\"ok\\\",\\\"KeySymbol\\\":\\\"\\\",\\\"KeyCodes\\\":\\\"[]\\\",\\\"ButtonIndexes\\\":\\\"[]\\\",\\\"KeyCode\\\":\\\"-1\\\",\\\"ButtonIndex\\\":\\\"-1\\\"}\",\"ActorGuard\":\"{\\\"KeyName\\\":\\\"other\\\",\\\"KeySymbol\\\":\\\"A\\\",\\\"KeyCodes\\\":\\\"[\\\\\\\"65\\\\\\\"]\\\",\\\"ButtonIndexes\\\":\\\"[\\\\\\\"6\\\\\\\"]\\\",\\\"KeyCode\\\":\\\"-1\\\",\\\"ButtonIndex\\\":\\\"-1\\\"}\",\"VisibleHitBox\":\"{\\\"KeyName\\\":\\\"other\\\",\\\"KeySymbol\\\":\\\"F6\\\",\\\"KeyCodes\\\":\\\"[\\\\\\\"117\\\\\\\"]\\\",\\\"ButtonIndexes\\\":\\\"[]\\\",\\\"KeyCode\\\":\\\"-1\\\",\\\"ButtonIndex\\\":\\\"-1\\\"}\",\"ChangeControlActor\":\"{\\\"KeyName\\\":\\\"other\\\",\\\"KeySymbol\\\":\\\"S\\\",\\\"KeyCodes\\\":\\\"[\\\\\\\"83\\\\\\\"]\\\",\\\"ButtonIndexes\\\":\\\"[\\\\\\\"11\\\\\\\"]\\\",\\\"KeyCode\\\":\\\"-1\\\",\\\"ButtonIndex\\\":\\\"-1\\\"}\"}","SESetting":"{\"ActorChange\":\"{\\\"FileName\\\":\\\"\\\",\\\"Volume\\\":\\\"90\\\",\\\"Pitch\\\":\\\"100\\\",\\\"Pan\\\":\\\"0\\\"}\"}","EnableARPGSwitchId":"2","UseDamagePopup":"true","UseImageDamage":"false","UseImageTargetSelectCursor":"false","TargetSelectCursorImageFileName":"","EnableChangeControlActorSwitchId":"6","ErrorMessageLanguage":"en"}},
{"name":"build/CharacterImageEx","status":true,"description":"CharacterImageEx v1.1.2","parameters":{"RegisterImages":"[]"}},
{"name":"build/ARPG_ItemShortcut","status":true,"description":"ARPG_ItemShortcut v1.4.0","parameters":{"NumShortcutSlots":"6","Text":"{\"UseItem\":\"Use\",\"RegisterShortcut\":\"Register shortcut\"}","KeySetting":"{\"UseShortcutItem\":\"{\\\"KeyName\\\":\\\"other\\\",\\\"KeySymbol\\\":\\\"C\\\",\\\"KeyCodes\\\":\\\"[\\\\\\\"67\\\\\\\"]\\\",\\\"ButtonIndexes\\\":\\\"[\\\\\\\"7\\\\\\\"]\\\",\\\"KeyCode\\\":\\\"-1\\\",\\\"ButtonIndex\\\":\\\"-1\\\"}\"}"}},
{"name":"build/ARPG_WeaponAnimation","status":true,"description":"ARPG_WeaponAnimation v1.1.1","parameters":{}},
{"name":"SelfVariable","status":true,"description":"Self variable v1.5.1","parameters":{"SelfVariablePrefix":"$","CommonVariablePrefix":"%","FloatVariablePrefix":"#","ErrorLanguage":"en"}},
{"name":"EffekseerAnimationColorChange","status":true,"description":"Effekseer Animation Color Change v1.0.2","parameters":{"AnimationNameParseErrorMessage":"The name of animation ID (%1) is invalid."}},
{"name":"ContinuousAnimation","status":true,"description":"continuous animation v1.0.0","parameters":{}},
{"name":"build/MapActorStatus","status":true,"description":"MapActorStatus v1.1.0","parameters":{"EnableMapActorStatusSwitchId":"3","LeaderOnly":"false","StatusAreaX":"40","StatusAreaY":"480","StatusAreaSpace":"220","GaugeWidth":"128","GaugeHeight":"24"}},
{"name":"build/CharacterCollisionEx","status":true,"description":"CharacterCollisionEx v1.0.2","parameters":{}},
{"name":"--------------------------","status":false,"description":"---------------------------------------------------------------------","parameters":{}},
{"name":"OcRam_Core","status":true,"description":"v1.16 Core plugin for other OcRam -plugins.\r\nImport this plugin before any other OcRam -plugin.","parameters":{"MV specific":"true","Screen width":"816","Screen height":"624","Show BGS2/3 Volume":"true","BGS2/3 Option Caption":"Weather Volume","BGS2/3 Title Volume":"1.00","Merge ME/BGM Volume":"true","Region passabilities":"true","Allow ALL":"41","Allow player":"42","Allow events":"43","Block ALL":"49","Block player":"50","Block events":"51","Do culling":"true","Cull X-threshold":"2.00","Cull Y-threshold":"2.00","Event through fix":"true","Start events /w comments":"false","Use spriteset in title":"true","Debug mode":"false"}},
{"name":"OcRam_Layers","status":true,"description":"v1.06 Display ultra fast parallax layers or dynamic scrolling/looping tiled layers (even in title/battle for fog, sandstorm etc... effects).","parameters":{"Layer image directory":"img/pictures/","Dynamic layer defaults":"","Z-index":"3","Opacity":"255","Fixed to map":"true","ScrollX":"0.00","ScrollY":"0.00","LoopX":"0.00","LoopY":"0.00","Fade time":"255","Inherited to battle":"true","Clear on transfer":"false","Template layers":"[]","Title layers":"[]","Use only parallax mapping":"true","Debug mode":"true"}},
{"name":"--------------------------","status":false,"description":"---------------------------------------------------------------------","parameters":{}}
];
